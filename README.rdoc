


cuppa_sugar
A networking systems that allows you to search your friend's items for things that you may want to borrow, keep track of your borrowed and lent items and find how far away your generous friends are!

-----WIRE FRAME:-----
APP Planned out with Prototyper: 
https://popapp.in/projects/52d353d8956776cd54000053/preview

-----REQUIREMENTS AND GEMS-----

httparty
UNIREST
google-map-driving-direction API


#############  MAPPING   API   ############

https://www.mashape.com/montanaflynn/google-maps-driving-directions#!endpoint-Directions


########## SCHEMA ##############



------USERS--------
name:string
passcode:string
bio:text
image_url:string
street_address:string
city:string
state:string

--------ITEMS------
name:string
description:text
category:string
owner_id:integer 

-------BORROWS---------
borrower_id:integer 
item_id:integer 
borrowed:boolean

t.timestamps 



USERS have many items

BORROWS belong to USERS

BORROWS belong to ITEMS 



                         |-           -|
        -----------------|-  BORROWS  -|-----------------
        |                |-           -|                | 
        |                                               |
        |                                               |
        |                                               |
        |                                               |
      USERS       ------------has many------->       ITEMS
                                                   








_______________FB NOTES_________________

https://developers.facebook.com/x/apps/389772201158924/dashboard/


----------------------API NOTES----------------------
response = Unirest::get "https://montanaflynn-mapit.p.mashape.com/directions?starting=Orange%20County&ending=New%20York",
[6] pry(main)* headers: {
[6] pry(main)*   "X-Mashape-Authorization" => "pNMqKdhb94S2zg2jLbX7c4FBnNbZFfFo"
[6] pry(main)* }
=> #<Unirest::HttpResponse:0x007f9121f64b18
 @body=
  {"distance"=>"2,787 mi",
   "duration"=>"1 day 16 hours",
   "start_location"=>"Orange County, CA, USA",
   "end_location"=>"New York, NY, USA",
   "directions"=>
    [{"distance"=>"0.4 mi",
      "duration"=>"1 min",
      "direction"=>
       "Head <b>northeast</b> on <b>Red Hill Ave</b> toward <b>Parkway Loop</b>"},
     {"distance"=>"1.8 mi",
      "duration"=>"2 mins",
      "direction"=>"Take the 2nd <b>right</b> onto <b>Edinger Ave</b>"},
     {"distance"=>"0.6 mi",
      "duration"=>"1 min",
      "maneuver"=>"turn-left",
      "direction"=>"Turn <b>left</b>"},
     {"distance"=>"6.6 mi",
      "duration"=>"6 mins",
      "direction"=>
       "Take the ramp onto <b>CA-261 N</b><div style=\"font-size:0.9em\">Partial toll road</di
     {"distance"=>"5.5 mi",
      "duration"=>"5 mins",
      "maneuver"=>"merge",
[7] pry(main)> response.first
NoMethodError: undefined method `first' for #<Unirest::HttpResponse:0x007f9121f64b18>
from (pry):13:in `__pry__'
[8] pry(main)> response.keys
NoMethodError: undefined method `keys' for #<Unirest::HttpResponse:0x007f9121f64b18>
from (pry):14:in `__pry__'
[9] pry(main)> response.class
=> Unirest::HttpResponse
[10] pry(main)> response.body
=> {"distance"=>"2,787 mi",
 "duration"=>"1 day 16 hours",
 "start_location"=>"Orange County, CA, USA",
 "end_location"=>"New York, NY, USA",
 "directions"=>
  [{"distance"=>"0.4 mi",
    "duration"=>"1 min",
    "direction"=>
     "Head <b>northeast</b> on <b>Red Hill Ave</b> toward <b>Parkway Loop</b>"},
   {"distance"=>"1.8 mi",
    "duration"=>"2 mins",
    "direction"=>"Take the 2nd <b>right</b> onto <b>Edinger Ave</b>"},
   {"distance"=>"0.6 mi",
    "duration"=>"1 min",
    "maneuver"=>"turn-left",
    "direction"=>"Turn <b>left</b>"},
   {"distance"=>"6.6 mi",
    "duration"=>"6 mins",
    "direction"=>
     "Take the ramp onto <b>CA-261 N</b><div style=\"font-size:0.9em\">Partial toll road</div>
   {"distance"=>"5.5 mi",
    "duration"=>"5 mins",
    "maneuver"=>"merge",
    "direction"=>
     "Merge onto <b>CA-241 N</b><div style=\"font-size:0.9em\">Toll road</div>"},
...skipping...
=> {"distance"=>"2,787 mi",
 "duration"=>"1 day 16 hours",
 "start_location"=>"Orange County, CA, USA",
 "end_location"=>"New York, NY, USA",
 "directions"=>
  [{"distance"=>"0.4 mi",
    "duration"=>"1 min",
    "direction"=>
     "Head <b>northeast</b> on <b>Red Hill Ave</b> toward <b>Parkway Loop</b>"},
   {"distance"=>"1.8 mi",
    "duration"=>"2 mins",
    "direction"=>"Take the 2nd <b>right</b> onto <b>Edinger Ave</b>"},
   {"distance"=>"0.6 mi",
    "duration"=>"1 min",
    "maneuver"=>"turn-left",
    "direction"=>"Turn <b>left</b>"},
   {"distance"=>"6.6 mi",
    "duration"=>"6 mins",
    "direction"=>
     "Take the ramp onto <b>CA-261 N</b><div style=\"font-size:0.9em\">Partial toll road</div>
   {"distance"=>"5.5 mi",
    "duration"=>"5 mins",
    "maneuver"=>"merge",
    "direction"=>
     "Merge onto <b>CA-241 N</b><div style=\"font-size:0.9em\">Toll road</div>"},
[11] pry(main)> response.body.keys
=> ["distance", "duration", "start_location", "end_location", "directions"]
[12] pry(main)> response.body[0]
=> nil
[13] pry(main)> response.body[distance]
NameError: undefined local variable or method `distance' for main:Object
from (pry):19:in `__pry__'
[14] pry(main)> response.body["distance"]
=> "2,787 mi"
[15] pry(main)>





=---------------BORROW---------------


pry(main)> Item.all
  Item Load (0.6ms)  SELECT "items".* FROM "items"
=> [#<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">]
[5] pry(main)> wn = Item.first
  Item Load (0.6ms)  SELECT "items".* FROM "items" LIMIT 1
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[6] pry(main)> wn
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[7] pry(main)> wn.borrows
  Borrow Load (0.5ms)  SELECT "borrows".* FROM "borrows" WHERE "borrows"."item_id" = 1
=> []
[8] pry(main)> wn.owner
  User Load (0.6ms)  SELECT "users".* FROM "users" WHERE "users"."id" = 1 LIMIT 1
=> #<User id: 1, name: "Meghann", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[9] pry(main)> wn.owner.name
=> "Meghann"
[10] pry(main)> wn.borrows
=> []
[11] pry(main)> wn.borrows.build
=> #<Borrow id: nil, borrowed: false, item_id: 1, borrower_id: nil, created_at: nil, updated_at: nil>
[12] pry(main)> wn.borrows.to_sql
=> "SELECT \"borrows\".* FROM \"borrows\"  WHERE \"borrows\".\"item_id\" = 1"
[13] pry(main)> wn.borrows.build
=> #<Borrow id: nil, borrowed: false, item_id: 1, borrower_id: nil, created_at: nil, updated_at: nil>
[14] pry(main)> wn_borrow_one = wn.borrows.build
=> #<Borrow id: nil, borrowed: false, item_id: 1, borrower_id: nil, created_at: nil, updated_at: nil>
[15] pry(main)> wn_borrow_one
=> #<Borrow id: nil, borrowed: false, item_id: 1, borrower_id: nil, created_at: nil, updated_at: nil>
[16] pry(main)> wn_borrow_one.item
NoMethodError: undefined method `item' for #<Borrow:0x007fb8233c44d8>
from /Users/meghannplunkett/.rvm/gems/ruby-2.0.0-p247@wdi-block/gems/activemodel-3.2.16/lib/active_model/attribute_methods.rb:407:in `method_missing'
[17] pry(main)> wn_borrow_one.borrower_id
=> nil
[18] pry(main)> wn_borrow_one.borrower_id = tanner.id
NameError: undefined local variable or method `tanner' for main:Object
from (pry):17:in `__pry__'
[19] pry(main)> tanner = User.find_by_name("Tanner")
  User Load (16.7ms)  SELECT "users".* FROM "users" WHERE "users"."name" = 'Tanner' LIMIT 1
=> #<User id: 2, name: "Tanner", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[20] pry(main)> wn_borrow_one.borrower_id = tanner.id
=> 2
[21] pry(main)> wn_borrow_one
=> #<Borrow id: nil, borrowed: false, item_id: 1, borrower_id: 2, created_at: nil, updated_at: nil>
[22] pry(main)> wn_borrow_one.save
   (0.2ms)  BEGIN
  SQL (5.8ms)  INSERT INTO "borrows" ("borrowed", "borrower_id", "created_at", "item_id", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["borrowed", false], ["borrower_id", 2], ["created_at", Tue, 14 Jan 2014 02:22:17 UTC +00:00], ["item_id", 1], ["updated_at", Tue, 14 Jan 2014 02:22:17 UTC +00:00]]
   (1.1ms)  COMMIT
=> true
[23] pry(main)> Borrow.all
  Borrow Load (0.6ms)  SELECT "borrows".* FROM "borrows"
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:22:17">]
[24] pry(main)> wn
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[25] pry(main)> wn.borrows
=> [#<Borrow id: nil, borrowed: false, item_id: 1, borrower_id: nil, created_at: nil, updated_at: nil>,
 #<Borrow id: nil, borrowed: false, item_id: 1, borrower_id: nil, created_at: nil, updated_at: nil>,
 #<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:22:17">]
[26] pry(main)> wn.reload
  Item Load (0.8ms)  SELECT "items".* FROM "items" WHERE "items"."id" = $1 LIMIT 1  [["id", 1]]
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[27] pry(main)> wn.borrows
  Borrow Load (0.5ms)  SELECT "borrows".* FROM "borrows" WHERE "borrows"."item_id" = 1
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:22:17">]
[28] pry(main)> wn.borrows.first
=> #<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:22:17">
[29] pry(main)> wn.borrows.first.borrowed
=> false
[30] pry(main)> wn.borrows.first.borrowed = true
=> true
[31] pry(main)> wn.borrows.first
=> #<Borrow id: 1, borrowed: true, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:22:17">
[32] pry(main)> wn.borrows.first.save
   (0.2ms)  BEGIN
   (0.4ms)  UPDATE "borrows" SET "borrowed" = 't', "updated_at" = '2014-01-14 02:23:14.445869' WHERE "borrows"."id" = 1
   (1.4ms)  COMMIT
=> true
[33] pry(main)> wn.borrows
=> [#<Borrow id: 1, borrowed: true, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:23:14">]
[34] pry(main)> wn.borrows.first
=> #<Borrow id: 1, borrowed: true, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:23:14">
[35] pry(main)> wn.borrows.first.borrowed
=> true
[36] pry(main)> wn.borrows.first.borrowed = false
=> false
[37] pry(main)> wn.borrows.first.borrowed.save
NoMethodError: undefined method `save' for false:FalseClass
from (pry):36:in `__pry__'
[38] pry(main)> wn.borrows.first.save
   (0.2ms)  BEGIN
   (0.4ms)  UPDATE "borrows" SET "borrowed" = 'f', "updated_at" = '2014-01-14 02:24:00.124943' WHERE "borrows"."id" = 1
   (0.6ms)  COMMIT
=> true
[39] pry(main)> wn.borrows
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">]
[40] pry(main)> User.create(name: "Bob")
   (0.2ms)  BEGIN
  SQL (2.6ms)  INSERT INTO "users" ("bio", "city", "created_at", "image_url", "name", "password", "state", "street_address", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING "id"  [["bio", nil], ["city", nil], ["created_at", Tue, 14 Jan 2014 02:24:36 UTC +00:00], ["image_url", nil], ["name", "Bob"], ["password", nil], ["state", nil], ["street_address", nil], ["updated_at", Tue, 14 Jan 2014 02:24:36 UTC +00:00]]
   (0.7ms)  COMMIT
=> #<User id: 3, name: "Bob", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 02:24:36", updated_at: "2014-01-14 02:24:36">
[41] pry(main)> bob = _
=> #<User id: 3, name: "Bob", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 02:24:36", updated_at: "2014-01-14 02:24:36">
[42] pry(main)> bob
=> #<User id: 3, name: "Bob", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 02:24:36", updated_at: "2014-01-14 02:24:36">
[43] pry(main)> wn
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[44] pry(main)> wn.borrows
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">]
[45] pry(main)> wn.borrows.build(borrower_id: bob.id, borrowed: true)
=> #<Borrow id: nil, borrowed: true, item_id: 1, borrower_id: 3, created_at: nil, updated_at: nil>
[46] pry(main)> wn.borrows.build(borrower_id: bob.id, borrowed: true).save
   (0.4ms)  BEGIN
  SQL (0.6ms)  INSERT INTO "borrows" ("borrowed", "borrower_id", "created_at", "item_id", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["borrowed", true], ["borrower_id", 3], ["created_at", Tue, 14 Jan 2014 02:25:27 UTC +00:00], ["item_id", 1], ["updated_at", Tue, 14 Jan 2014 02:25:27 UTC +00:00]]
   (1.3ms)  COMMIT
=> true
[47] pry(main)> wn.borrows
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">,
 #<Borrow id: nil, borrowed: true, item_id: 1, borrower_id: 3, created_at: nil, updated_at: nil>,
 #<Borrow id: 2, borrowed: true, item_id: 1, borrower_id: 3, created_at: "2014-01-14 02:25:27", updated_at: "2014-01-14 02:25:27">]
[48] pry(main)> wn.reload
  Item Load (0.5ms)  SELECT "items".* FROM "items" WHERE "items"."id" = $1 LIMIT 1  [["id", 1]]
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[49] pry(main)> wn.borrows
  Borrow Load (0.5ms)  SELECT "borrows".* FROM "borrows" WHERE "borrows"."item_id" = 1
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">,
 #<Borrow id: 2, borrowed: true, item_id: 1, borrower_id: 3, created_at: "2014-01-14 02:25:27", updated_at: "2014-01-14 02:25:27">]
[50] pry(main)> quit
meghannplunkett@Macintosh-2:~/Documents/ga_wdi/projects/cuppa_sugar/cuppa_sugar  chalkboard
$ rspec spec/models/item_spec.rb

Item
  has many borrows
  can be borrowed by a user (FAILED - 1)
  starts off as not borrowed (FAILED - 2)
  belongs to someone

Failures:

  1) Item can be borrowed by a user
     Failure/Error: book.borrow_me(tanner) # should let me borrow a book
     NoMethodError:
       undefined method `borrow_me' for #<Item:0x007ff2e2ff2850>
     # ./spec/models/item_spec.rb:26:in `block (2 levels) in <top (required)>'

  2) Item starts off as not borrowed
     Failure/Error: book.borrowed?.should eq(false)
     NoMethodError:
       undefined method `borrowed?' for #<Item:0x007ff2e58a1030>
     # ./spec/models/item_spec.rb:22:in `block (2 levels) in <top (required)>'

Finished in 0.14737 seconds
4 examples, 2 failures

Failed examples:

rspec ./spec/models/item_spec.rb:25 # Item can be borrowed by a user
rspec ./spec/models/item_spec.rb:21 # Item starts off as not borrowed

Randomized with seed 51092

meghannplunkett@Macintosh-2:~/Documents/ga_wdi/projects/cuppa_sugar/cuppa_sugar  chalkboard
$ rails c
Loading development environment (Rails 3.2.16)
[1] pry(main)> Item.first
  Item Load (0.6ms)  SELECT "items".* FROM "items" LIMIT 1
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[2] pry(main)> book = _
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[3] pry(main)> book
=> #<Item id: 1, name: "White Noise", description: "best book ever", category: "book", owner_id: 1, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[4] pry(main)> book.owner
  User Load (0.5ms)  SELECT "users".* FROM "users" WHERE "users"."id" = 1 LIMIT 1
=> #<User id: 1, name: "Meghann", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[5] pry(main)> book.borrows
  Borrow Load (0.4ms)  SELECT "borrows".* FROM "borrows" WHERE "borrows"."item_id" = 1
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">,
 #<Borrow id: 2, borrowed: true, item_id: 1, borrower_id: 3, created_at: "2014-01-14 02:25:27", updated_at: "2014-01-14 02:25:27">]
[6] pry(main)> book.borrows.destroy
=> []
[7] pry(main)> book.borrows
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">,
 #<Borrow id: 2, borrowed: true, item_id: 1, borrower_id: 3, created_at: "2014-01-14 02:25:27", updated_at: "2014-01-14 02:25:27">]
[8] pry(main)> book.borrows.each(&:destroy)
   (0.2ms)  BEGIN
  SQL (4.3ms)  DELETE FROM "borrows" WHERE "borrows"."id" = $1  [["id", 1]]
   (1.4ms)  COMMIT
   (0.1ms)  BEGIN
  SQL (0.3ms)  DELETE FROM "borrows" WHERE "borrows"."id" = $1  [["id", 2]]
   (0.5ms)  COMMIT
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">,
 #<Borrow id: 2, borrowed: true, item_id: 1, borrower_id: 3, created_at: "2014-01-14 02:25:27", updated_at: "2014-01-14 02:25:27">]
[9] pry(main)> book.borrows
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">,
 #<Borrow id: 2, borrowed: true, item_id: 1, borrower_id: 3, created_at: "2014-01-14 02:25:27", updated_at: "2014-01-14 02:25:27">]
[10] pry(main)> book.borrows.destroy_all
   (0.2ms)  BEGIN
   (0.2ms)  COMMIT
=> [#<Borrow id: 1, borrowed: false, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:22:17", updated_at: "2014-01-14 02:24:00">,
 #<Borrow id: 2, borrowed: true, item_id: 1, borrower_id: 3, created_at: "2014-01-14 02:25:27", updated_at: "2014-01-14 02:25:27">]
[11] pry(main)> book.borrows
=> []
[12] pry(main)> book.borrows
=> []
[13] pry(main)> tanner = User.find_by_name("Tanner")
  User Load (1.0ms)  SELECT "users".* FROM "users" WHERE "users"."name" = 'Tanner' LIMIT 1
=> #<User id: 2, name: "Tanner", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 01:43:20", updated_at: "2014-01-14 01:43:20">
[14] pry(main)> book.borrow_me(tanner)
   (0.2ms)  BEGIN
  SQL (2.1ms)  INSERT INTO "borrows" ("borrowed", "borrower_id", "created_at", "item_id", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["borrowed", true], ["borrower_id", 2], ["created_at", Tue, 14 Jan 2014 02:32:35 UTC +00:00], ["item_id", 1], ["updated_at", Tue, 14 Jan 2014 02:32:35 UTC +00:00]]
   (1.3ms)  COMMIT
=> true
[15] pry(main)> book.borros
NoMethodError: undefined method `borros' for #<Item:0x007f8173f0bf58>
from /Users/meghannplunkett/.rvm/gems/ruby-2.0.0-p247@wdi-block/gems/activemodel-3.2.16/lib/active_model/attribute_methods.rb:407:in `method_missing'
[16] pry(main)> book.borrows
=> [#<Borrow id: 3, borrowed: true, item_id: 1, borrower_id: 2, created_at: "2014-01-14 02:32:35", updated_at: "2014-01-14 02:32:35">]
[17] pry(main)> book.borrows.last.borrower_id
=> 2
[18] pry(main)> quit
meghannplunkett@Macintosh-2:~/Documents/ga_wdi/projects/cuppa_sugar/cuppa_sugar  chalkboard
$ rspec spec/models/item_spec.rb

Item
  belongs to someone
  has many borrows
  knows its own borrower (FAILED - 1)

Failures:

  1) Item knows its own borrower
     Failure/Error: book.borrower.should eq(tanner)
     NoMethodError:
       undefined method `borrower' for #<Item:0x007fb0a6419db8>
     # ./spec/models/item_spec.rb:27:in `block (2 levels) in <top (required)>'

Finished in 0.18339 seconds
3 examples, 1 failure

Failed examples:

rspec ./spec/models/item_spec.rb:25 # Item knows its own borrower

Randomized with seed 46294

meghannplunkett@Macintosh-2:~/Documents/ga_wdi/projects/cuppa_sugar/cuppa_sugar  chalkboard
$ rspec spec/models/item_spec.rb

Item
  belongs to someone
  has many borrows
  knows its own borrower (FAILED - 1)

Failures:

  1) Item knows its own borrower
     Failure/Error: book.borrower.should eq(tanner)
     NoMethodError:
       undefined method `borrower_id' for []:ActiveRecord::Relation
     # ./app/models/item.rb:16:in `borrower'
     # ./spec/models/item_spec.rb:27:in `block (2 levels) in <top (required)>'

Finished in 0.16201 seconds
3 examples, 1 failure

Failed examples:

rspec ./spec/models/item_spec.rb:25 # Item knows its own borrower

Randomized with seed 4287

meghannplunkett@Macintosh-2:~/Documents/ga_wdi/projects/cuppa_sugar/cuppa_sugar  chalkboard
$ rspec spec/models/item_spec.rb

Item
  has many borrows
  belongs to someone
  knows its own borrower (FAILED - 1)

Failures:

  1) Item knows its own borrower
     Failure/Error: book.borrower.should eq(tanner)
     ArgumentError:
       Unknown key: borrowed
     # ./app/models/item.rb:16:in `borrower'
     # ./spec/models/item_spec.rb:27:in `block (2 levels) in <top (required)>'

Finished in 0.16214 seconds
3 examples, 1 failure

Failed examples:

rspec ./spec/models/item_spec.rb:25 # Item knows its own borrower

Randomized with seed 32865

meghannplunkett@Macintosh-2:~/Documents/ga_wdi/projects/cuppa_sugar/cuppa_sugar  chalkboard
$ rspec spec/models/item_spec.rb

Item
  belongs to someone
  knows its own borrower (FAILED - 1)
  has many borrows

Failures:

  1) Item knows its own borrower
     Failure/Error: book.borrower.should eq(tanner)

       expected: #<User id: 37, name: "Tanner", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 02:40:34", updated_at: "2014-01-14 02:40:34">
            got: #<Borrow id: 4, borrowed: true, item_id: 31, borrower_id: 37, created_at: "2014-01-14 02:40:34", updated_at: "2014-01-14 02:40:34">

       (compared using ==)

       Diff:
       @@ -1,2 +1,2 @@
       -#<User id: 37, name: "Tanner", password: nil, bio: nil, image_url: nil, street_address: nil, city: nil, state: nil, created_at: "2014-01-14 02:40:34", updated_at: "2014-01-14 02:40:34">
       +#<Borrow id: 4, borrowed: true, item_id: 31, borrower_id: 37, created_at: "2014-01-14 02:40:34", updated_at: "2014-01-14 02:40:34">

     # ./spec/models/item_spec.rb:27:in `block (2 levels) in <top (required)>'

Finished in 0.17357 seconds
3 examples, 1 failure

Failed examples:

rspec ./spec/models/item_spec.rb:25 # Item knows its own borrower

Randomized with seed 25559

meghannplunkett@Macintosh-2:~/Documents/ga_wdi/projects/cuppa_sugar/cuppa_sugar  chalkboard
$ rspec spec/models/item_spec.rb

Item
  has many borrows
  knows its own borrower
  belongs to someone

Finished in 0.17286 seconds
3 examples, 0 failures

Randomized with seed 2692










https://montanaflynn-mapit.p.mashape.com/directions?starting=Orange%20County&ending=New%20York
https://montanaflynn-mapit.p.mashape.com/directions?starting=Orange%20County&ending=New%20York




